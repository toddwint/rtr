#!/usr/bin/env python3
#!python3
'''
 Input a CSV that has gateways and netmasks.
 Generate a list of commands to add IPs.
 Execute the commands.
'''
__version__ = '0.0.0'

import argparse
import csv
import pathlib
import subprocess

csv_filename = 'addrs.csv'
csv_path = pathlib.Path('/opt/rtr/upload')

# Create command line arguments (optionally to get a different filename)
parser = argparse.ArgumentParser(
    description=__doc__,
    epilog='If you need more help, tough.',
    )
parser.add_argument(
    '-v', '--version',
    help='show the version number and exit',
    action='version',
    version=f'Version: {__version__}',
    )
parser.add_argument(
    'filename',
    nargs='?',
    type=pathlib.Path,
    default=csv_filename,
    help=f'name of CSV file (default={csv_filename})',
    )
args = parser.parse_args()
csv_filename = csv_path / args.filename

if not csv_filename.exists():
    msg = f'[ERROR] `{csv_filename.name}` was not found. Exiting.'
    print(msg)
    raise(Exception(f'{msg}'))

csvlist = list(csv.reader(csv_filename.read_text().rstrip().split('\n')))
l = sorted(set((g,m) for g,m,*_ in csvlist[1:] if all((g,m))))
addrs = tuple(f'ip addr add {g}/{m} dev eth0' for g,m in l)

print('Adding addrs...')
for addr in addrs:
    rval = subprocess.run(addr,
        shell=True,
        universal_newlines=True,
        capture_output=True
        )
    print(rval.args, rval.stderr, rval.stdout, sep='\n')

rval = subprocess.run('ip addr',
    shell=True,
    universal_newlines=True,
    capture_output=True
    )
print(rval.args, rval.stdout, rval.stderr, sep='\n')

print('Done!')
